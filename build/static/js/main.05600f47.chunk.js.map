{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authAction.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/projects/ProjectSummary.js","components/projects/ProjectList.js","components/dashboard/Notifications.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","registerServiceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","_ref2","getFirebase","auth","then","type","props","react_default","a","createElement","className","NavLink","to","class","onClick","href","profile","initals","SignedOutLinks","state","firebase","navlink","uid","layout_SignedInLinks","layout_SignedOutLinks","Link","style","font-size","verticalAlign","ProjectSummary","_ref","project","title","authorFirstName","authorlastName","moment","createdAt","toDate","calendar","ProjectList","projects","map","key","id","projects_ProjectSummary","Notifications","notifications","item","user","content","time","fromNow","Dashboard","_this$props","this","projects_ProjectList","dashboard_Notifications","Redirect","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","authorLastName","SignIn","email","password","handleChange","e","_this","setState","Object","defineProperty","target","value","handleSubmit","preventDefault","signIn","onSubmit","onChange","htmlFor","authError","cred","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","_ref3","getFirestore","createUserWithEmailAndPassword","response","doc","set","CreateProject","createProject","history","push","disabled","authorId","add","objectSpread","Date","App","BrowserRouter","layout_Navbar","Switch","Route","exact","path","component","ProjectDetails","isLocalhost","Boolean","window","location","hostname","register","navigator","URL","process","origin","addEventListener","swUrl","concat","fetch","status","headers","get","indexOf","serviceWorker","ready","registration","unregister","reload","registerValidSW","console","log","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","error","initState","authReducer","arguments","length","undefined","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","userProfile","useFirestoreForProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","es","src_App","document","getElementById","registerServiceWorker"],"mappings":"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","file":"static/js/main.05600f47.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authAction';\n\nconst SignedInLinks = (props) => {\n  return (\n    <div>\n      <ul className=\"right \">\n        <li><NavLink to='/create' class>NewProject</NavLink></li>\n        <li><a onClick ={props.signOut} href=\"/\">LogOut</a></li>\n        <li><NavLink to='/' className=\"btn btn-floating pink  lighten-1\">{props.profile.initals}</NavLink></li>\n      </ul>\n    </div>\n  )\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    signOut:()=>dispatch(signOut())\n  }\n}\n\nexport default connect(null,mapDispatchToProps)(SignedInLinks)\n"," export const signIn = (credentials)=>{\n return (dispatch , getState ,{ getFirebase})=>{\n    const firebase = getFirebase();\n\n    firebase.auth().signInWithEmailAndPassword(\n        credentials.email,\n        credentials.password\n    ).then(\n        ()=>{\n           dispatch({type:'LOGIN_SUCCESS'} )\n        }\n    ).catch(\n        (err)=>{\n            dispatch({type:'LOGIN_ERROR',err:err});\n        }\n    );\n }\n}\n\n\nexport const signOut =()=>{\n    return (dispatch, getState,{getFirebase})=>{\n        const firebase= getFirebase();\n        firebase.auth().signOut().then(\n            ()=>{\n                dispatch({type:'LOGOUT_SUCCESS'});\n            }\n        );\n    }\n}\n\nexport const signUp =(newUser)=>{\n    return (dispatch , getState,{ getFirebase, getFirestore})=>{\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then(\n            (response)=>{\n                return firestore.collection('users').doc(response.user.uid).set({\n                    firstName:newUser.firstName,\n                    lastName: newUser.lastName,\n                    initals: newUser.firstName[0] +newUser.lastName[0]\n                })\n            }\n        ).then(\n            ()=>{\n                dispatch({type:'SIGNUP_SUCCESS'})\n            }\n        ).catch(\n            (err)=>{\n                dispatch({type:'SIGNUP_ERROR',err})\n            }\n        );\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <div>\n      <ul className=\"right\">\n        <li><NavLink to='/signup'>Signup</NavLink></li>\n        <li><NavLink to='/signin'>Login</NavLink></li>\n      </ul>\n    </div>\n  )\n}\n\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux';\n\nconst Navbar = (props) => {\n  const navlink = props.auth.uid ? <SignedInLinks profile={props.profile}/> : <SignedOutLinks />\n  return (\n    <nav className=\"nav-wraper blue-grey darken-4\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo left \"> <i class=\"large material-icons\" style={{'font-size': '40px',verticalAlign:'center'}}>cast_connected</i></Link>\n        {navlink}\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps=(state)=>{\n  return{\n    auth:state.firebase.auth,\n    profile:state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar);\n","import React from 'react'\nimport moment from 'moment';\nconst ProjectSummary = ({project}) => {\n  return (\n    <div className=\"card z-depth-0 project-summary\">\n      <div className=\"card-content grey-text text-darken-3\">\n        <span className=\"card-title \"><h5>{project.title}</h5></span>\n        <p className=\"h6\">Posted by {project.authorFirstName}{project.authorlastName}</p>\n        <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default ProjectSummary\n","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom';\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link key={project.id} to={'/project/' + project.id}>\n          <ProjectSummary project={project}  />\n          </Link>\n        )\n      })}  \n    </div>\n  )\n}\n\nexport default ProjectList\n","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const { notifications } = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content grey-text text-darken-3\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"online-users\">\n            { notifications && notifications.map(item =>{\n              return <li key={item.id}>\n                <span className=\"pink-text \">{item.user} </span>\n                <span>{item.content}</span>\n                <div className=\"note-date grey-text\">{moment(item.time.toDate()).fromNow()}</div>\n              </li>\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React, { Component } from 'react'\nimport ProjectList from '../projects/ProjectList'\nimport Notifications from './Notifications'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nclass Dashboard extends Component {\n  render() {\n    \n  \n    const { projects, auth,notifications } = this.props;\n    if(!auth.uid){\n      return <Redirect to='/signin' />\n    }\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications} />\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    projects: state.firestore.ordered.projects,\n    auth:state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(connect(mapStateToProps),\nfirestoreConnect([\n  { collection: 'projects', orderBy: ['createdAt', 'desc']},\n  { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n])\n)(Dashboard)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { compose } from 'redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment';\n\nconst ProjectDetails = (props) => {\n  const { auth } = props;\n  if(!auth.uid){\n    return <Redirect to=\"/signin\" />\n  }\n  if(props.project){\n    return (\n        <div className=\"container section project-details\">\n          <div className=\"card z-depth-0\">\n            <div className=\"card-content grey-text text-darken-3\">\n              <span className=\"card-title\"><h4>{props.project.title}</h4> </span>\n              <p className=\"flow-text\">{props.project.content}</p>\n              </div>\n              <div className=\"card-action grey lighten-4 grey-text\">\n                <div>Posted by {props.project.authorFirstName} {props.project.authorLastName}</div>\n                <div>{moment(props.project.createdAt.toDate()).calendar()}</div>\n              </div>\n          </div>\n        </div>\n    )\n    \n  }else{\n    return(\n      <div className=\"container center\">\n      <p className=\"flow-text\">Loading...</p>\n      </div>\n    );\n  }\n}\nconst mapStateToProps =(state ,ownProps)=>{\n  const id = ownProps.match.params.id;\n  const projects = state.firestore.data.projects;\n  const project = projects ? projects[id] : null;\n \n  return{\n    project:project,\n    auth:state.firebase.auth\n  }\n}\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([{\n    collection:'projects'\n  }])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect  }from 'react-redux';\nimport{ signIn }  from '../../store/actions/authAction';\nimport { Redirect } from 'react-router-dom';\n\n\nclass SignIn extends Component {\n  state={\n    email:'',\n    password:''\n  }\n  handleChange=(e)=>{\n    this.setState({\n      [e.target.id]:e.target.value\n    });\n    }\n   handleSubmit = (e)=>{\n     e.preventDefault();\n    this.props.signIn(this.state)\n    \n    this.setState({\n      email:'',\n      password:''\n    });\n  }\n  render() {\n    const { auth } = this.props;\n    if(auth.uid){\n      return <Redirect to='/' />\n    }\n    return (\n      <div className=\"container Signin section\">\n        <form onSubmit={this.handleSubmit} className=\"white \">\n        <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n        <br/>\n        <div className=\"input-field\">\n            <input type=\"email\" id=\"email\" \n            onChange={this.handleChange}\n            value={this.state.email}/>\n            <label htmlFor=\"email\">Email</label>\n        </div>\n        <div className=\"input-field\">\n            <input type=\"password\" id=\"password\" \n            onChange={this.handleChange}\n            value={this.state.password}/>\n            <label htmlFor=\"password\">Password</label>\n        </div>\n        <div className=\"input-field section\">\n        <button type=\"submit\" className=\"btn pink lighten-1 z-depth-0 waves-effect waves-light\">Sign In</button>\n          <div className=\"red-text center\">\n          { this.props.authError ?<p>{this.props.authError}</p>:null}\n          </div>\n        </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps =(state)=>{\n  return{\n    authError:state.auth.authError,\n    auth:state.firebase.auth\n  }\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return {\n    signIn: (cred)=> dispatch(signIn(cred))\n  }\n\n  \n}\nexport default connect( mapStateToProps,mapDispatchToProps)(SignIn);\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signUp } from '../../store/actions/authAction';\n\nclass SignUp extends Component {\n  state = {\n    email: '',\n    password: '',\n    firstName: '',\n    lastName: '',\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    this.props.signUp(this.state)\n    this.setState({\n      email: '',\n      password: '',\n      firstName: '',\n      lastName: '',\n    });\n  }\n  render() {\n    const { auth } = this.props;\n    if(auth.uid){\n      return <Redirect to='/' />\n    }\n    return (\n      <div className=\"container Signup section\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n          <div className=\"input-field\">\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id='email' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id='password' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"firstName\">First Name</label>\n            <input type=\"text\" id='firstName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"lastName\">Last Name</label>\n            <input type=\"text\" id='lastName' onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n          </div>\n          <div className=\"red-text center\">\n          { this.props.authError ?<p>{this.props.authError}</p>:null}\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\nconst mapStateToProps =(state)=>{\n  return{\n    authError:state.auth.authError,\n    auth:state.firebase.auth\n  }\n}\nconst mapDispatchToProps=(dispatch)=>{\n  return{\n    signUp: (newUser)=>dispatch(signUp(newUser))\n  }\n}\nexport default connect(mapStateToProps,mapDispatchToProps)(SignUp);\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom';\n\n\nclass CreateProject extends Component {\n  state = {\n    title: '',\n    content: ''\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log(this.state);\n    this.props.createProject(this.state);\n    this.props.history.push('/');\n    this.setState({\n      title: '',\n      content: ''\n    });\n  }\n  render() {\n    const { auth } = this.props\n    if(!auth.uid){\n      return <Redirect to=\"/signin\"/>\n    }\n    return (\n      <div className=\"container CreateProject\">\n        <form className=\"white\" onSubmit={this.handleSubmit}>\n          <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\n          <div className=\"input-field\">\n            <input type=\"text\" id='title' onChange={this.handleChange} value={this.state.title} />\n            <label htmlFor=\"title\">Project Title</label>\n          </div>\n          <div className=\"input-field\">\n            <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} value={this.state.content}></textarea>\n            <label htmlFor=\"content\">Project Content</label>\n          </div>\n          <div className=\"input-field\">\n            <button type=\"submit\" className=\"btn pink lighten-1\" disabled={!(this.state.title && this.state.content) >0}>Create</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps= (state)=>{\n  return{\n    auth:state.firebase.auth\n  }\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    createProject: (project) => dispatch(createProject(project))\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n  return (dispatch, getState, {getFirestore}) => {\n    const firestore = getFirestore();\n    const profile = getState().firebase.profile;\n    const authorId = getState().firebase.auth.uid;\n    \n    firestore.collection('projects').add({\n      ...project,\n      authorFirstName: profile.firstName,\n      authorLastName: profile.lastName,\n      authorId: authorId,\n      createdAt: new Date()\n    }).then(() => {\n      dispatch({ type: 'CREATE_PROJECT_SUCCESS' });\n    }).catch(err => {\n      dispatch({ type: 'CREATE_PROJECT_ERROR' }, err);\n    });\n  }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom'\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/projects/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/projects/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/'component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/create' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {\n  authError:null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type){\n      case 'LOGIN_ERROR':\n      console.log('Loggin Error');\n      return {...state, authError:'Login Failed'}\n      case 'LOGIN_SUCCESS':\n      console.log('Loggin Success');\n      return {...state, authError:null}\n      case'LOGOUT_SUCCESS':\n      console.log('Loggout Success')\n      return state\n      case 'SIGNUP_SUCCESS':\n      console.log('signup success');\n      return{...state,authError:null}\n      case 'SIGNUP_ERROR':\n      console.log('signup error')\n      return{...state, authError:action.err.message}\n      default:\n      return state;\n    }\n    \n};\n\nexport default authReducer;","const initState = {\n  projects: [\n    {id: '1', title: 'help me find peach', content: 'blah blah blah'},\n    {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\n    {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\n  ]\n}\n\nconst projectReducer = (state = initState, action) => {\n  switch (action.type) {\n    case 'CREATE_PROJECT':\n      console.log('create project', action.project)\n      ;\n      return state;\n      case 'CREATE_PROJECT_ERROR':\n      console.log('create project ERROR', action.err)\n      ;\n      return state;\n    \n\n    default:\n      return state;\n  }\n};\n\nexport default projectReducer;","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase';\n\n\n\nconst rootReducer = combineReducers({\n  auth: authReducer,\n  project: projectReducer,\n  firestore:firestoreReducer,\n  firebase:firebaseReducer\n});\n\nexport default rootReducer\n\n// the key name will be the data property on the state object","import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\n\n// Replace this with your own config details\nvar config = {\n  apiKey: \"AIzaSyBd7HF1AvE7J9eQcCTIf_ZPdhtDdTpATWE\",\n  authDomain: \"letsblog-9a00e.firebaseapp.com\",\n  databaseURL: \"https://letsblog-9a00e.firebaseio.com\",\n  projectId: \"letsblog-9a00e\",\n  storageBucket: \"letsblog-9a00e.appspot.com\",\n  messagingSenderId: \"941044494142\"\n};\nfirebase.initializeApp(config);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reactReduxFirebase(fbConfig, {userProfile: 'users', useFirestoreForProfile: true, attachAuthIsReady: true}),\n    reduxFirestore(fbConfig) // redux bindings for firestore\n  )\n);\n\nstore.firebaseAuthIsReady.then(\n  ()=>{\n    ReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n    registerServiceWorker();\n  })\n\n\n"],"sourceRoot":""}